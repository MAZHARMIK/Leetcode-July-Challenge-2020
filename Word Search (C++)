class Solution {
public:
    bool DFS(vector<vector<char>>& board, string word, int i, int j, int length) {
        if(length == word.length())
            return true; 
        if(i < 0 || i>= board.size() || j < 0 || j>= board[0].size() || word[length] != board[i][j])
            return false;
        
        char temp = board[i][j];
        board[i][j] = ' ';
        bool found =   DFS(board, word, i, j+1, length+1) ||
                       DFS(board, word, i, j-1, length+1) ||
                       DFS(board, word, i+1, j, length+1) ||
                       DFS(board, word, i-1, j, length+1);
        
        board[i][j] = temp;
        return found;
    }
    bool exist(vector<vector<char>>& board, string word) {
        for(int i = 0; i<board.size(); i++) {
            for(int j = 0; j<board[0].size(); j++) {
                if(board[i][j] == word[0] && DFS(board, word, i, j, 0))
                    return true;
            }
        }
        return false;
    }
};
