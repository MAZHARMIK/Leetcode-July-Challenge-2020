//using stack

class Solution {
public:
    Node* flatten(Node* head) {
        if(head == NULL)
            return head;
        stack<Node*> stk;
        Node* curr = head;
        Node* friendN = head;
        while(curr != NULL) {
            if(curr->child == NULL) {
                friendN = curr;
                curr = curr->next;
            } else {
                friendN = curr;
                if(curr->next != NULL) {
                    stk.push(curr->next);
                    curr->next->prev = NULL;
                }
                curr->next = curr->child;
                curr->child->prev = curr;
                curr->child = NULL;
                curr = curr->next;
            }
        }
        
        while(!stk.empty()) {
            Node* temp = stk.top();
            stk.pop();
            curr = temp;
            friendN->next = curr;
            curr->prev = friendN;
            while(curr!=NULL) {
                friendN = curr;
                curr = curr->next;
            }
        }
        return head;
    }
};
