/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void collectTraversal(TreeNode* root, vector<vector<int>>& result){
        queue<TreeNode*> que;
        que.push(root);
        int n;
        TreeNode* curr;
        while(!que.empty()){
            vector<int> temp;
            n = que.size();
            while(n--){
                curr = que.front();
                que.pop();
                if(curr->left)
                    que.push(curr->left);
                if(curr->right)
                    que.push(curr->right);
                temp.push_back(curr->val);
            }
            result.insert(result.begin(), temp);
        }
    }
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        if(root == NULL)
            return {};
        vector<vector<int>> result;
        collectTraversal(root, result);
        return result;
    }
};
